version: 2.1
orbs:
  python: circleci/python@2.0.3
  aws-cli: circleci/aws-cli@3.1.4
  ansible-playbook: orbss/ansible-playbook@0.0.5
  ruby: circleci/ruby@2.0.0
jobs:
  cfn-lint:
    executor: python/default
    steps:
      - checkout
      - run: pip install cfn-lint
      - run:
          name: run cfn-lint
          command: |
            cfn-lint -i W3002 -t cloudformation/*.yml
  aws-cli-example:
    executor: aws-cli/default
    steps:
      - checkout
      - aws-cli/setup:
          aws-access-key-id: AWS_ACCESS_KEY_ID
          aws-secret-access-key: AWS_SECRET_ACCESS_KEY
          aws-region: AWS_DEFAULT_REGION
      - run:
          name: setup environment
          command: |
            set -x
            aws cloudformation deploy --template-file cloudformation/vpc_subnet_routetable_igw.yml --stack-name stack01-1
            aws cloudformation deploy --template-file cloudformation/securitygroup.yml --stack-name stack01-2
            aws cloudformation deploy --template-file cloudformation/ec2_instance.yml --stack-name stack01-3
            aws cloudformation deploy --template-file cloudformation/rds.yml --stack-name stack01-4
            aws cloudformation deploy --template-file cloudformation/alb.yml --stack-name stack01-5
            aws cloudformation deploy --template-file cloudformation/S3.yml --stack-name stack01-6
      - run:
          name: get RDS endpoint
          command: |
            RDS_ENDPOINT=$(aws rds describe-db-instances \
              --db-instance-identifier dbinstance-sample01 \
              --query "DBInstances[*].Endpoint.Address" \
              --output text)
            echo "RDS endpoint: ${RDS_ENDPOINT}"
            echo "export RDS_ENDPOINT=${RDS_ENDPOINT}" >> $BASH_ENV
  check-bash:
    steps:
      - run:
          name: Show BASH_ENV
          command: |
            echo "BASH_ENV=$BASH_ENV"
  executeAnsible:
    executor: ansible-playbook/default
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints:
            - 2a:c5:6b:40:59:d0:07:89:47:7d:4b:0c:ff:5b:69:f0
      - ansible-playbook/install:
          version: '2.10.7'
      - ansible-playbook/playbook:
          playbook: ansible/playbook.yml
          playbook-options: '-u ec2-user -i ansible/hosts --private-key ~/.ssh/id_rsa --extra-vars "master_key=$MASTER_KEY" --extra-vars "rds_endpoint=${RDS_ENDPOINT}"'
  executeServerspec:
    executor: ruby/default
    steps:
      - checkout
      - ruby/install-deps: 
          app-dir: serverspec
      - run:
          name: sarverspec
          command: |
            cd serverspec

      
workflows:
  deploydemo:
    jobs:
      - cfn-lint
      - aws-cli-example:
          requires:
            - cfn-lint
      - check-bash:
          requires:
            - aws-cli-example
      - executeAnsible:
          requires:
            - check-bash